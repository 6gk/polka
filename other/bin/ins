#!/bin/sh
#
#  pacman/makepkg/git wrapper for the aur
#
# deps
# - sudo
# - makepkg
# - an arch-based distro
# - git
#

# if colours don't work for you, install (and symlink to
# /bin/sh) a shell that's actually POSIX-compliant like `dash`


[ -z "$1" ] &&
	echo "\033[31merror:\033[0m no packages specified" &&
	exit

# location for this script to download the aur repos
location="${XDG_CACHE_HOME:-~/.cache}/aur"

# make $location if it doesn't already exist
mkdir -p "$location"

official() {
	echo "\033[34m$officialhr\033[0m found in official repos; installing normally."
	# install the package
	sudo pacman -S $continue $official
}

aur() {
	# if the package has already been cloned, rename the existing
	# directory and clone again.
	[ -e "$location/$i" ] && mv "$location/$i" \
		"$location/$i-$(date "+%Y-%m-%d_%H-%M")"

	# check if the package exists in the aur
	if [ -n "$(git ls-remote "https://aur.archlinux.org/$i.git")" ]; then
		echo "\033[34m$i\033[0m found in AUR; cloning"

		# clone the package
		git clone "https://aur.archlinux.org/$i" "$location/$i"

		# make the package
		cd "$location/$i"
		makepkg -si
	else
		# exit if the package isn't in the aur
		echo "\033[31merror:\033[0m package '$i' not found"
	fi
}

add() {
	[ -z "$2" ] && exit

	case $1 in
		a*)
			[ -n "$aurhr" ] &&
				aurhr="$aurhr, $2" ||
				aurhr="$2"
			aur="$aur $2"
			;;

		o*)
			[ -n "$officialhr" ] &&
				officialhr="$officialhr, $2" ||
				officialhr="$2"
			official="$official $2";;
	esac
	true
}

# check if the package exists in the official repos
for i in "$@"; do
	case "$i" in
		-*) opts="$i";;
		*) pacman -Si "$i" 2>&1 | grep -i 'was not found' >/dev/null && \
		add aur "$i" || add official "$i";;
	esac
done

[ -n "$opts" ] &&
	sudo pacman -S "$opts"

[ -n "$official" ] && official $official

for i in $aur; do
	aur $i
done

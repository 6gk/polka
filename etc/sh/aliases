#     ---
#   aliases
#     ---

alias rm="dl"
alias SU="sudo zsh"
alias fuck="pkill -9"
alias ss="sudo systemctl"
alias s1="sleep 1"
alias s2="sleep 2"
alias s3="sleep 3"
alias s4="sleep 4"

f() { find "${2:-.}" -iname "*$1*"; }
F() { find "${2:-.}" -name "$1"; }


# Git

alias w="which"
alias ga="git add"
alias gd="git diff"
alias gp="git push"
alias gs="git status"
alias gc="git commit"
alias gaa="git add -A"
alias gpf="git push -f"
alias gcm="git commit -m"
alias gca="git commit --amend"
alias gl="git log --all --decorate --oneline --graph"


# pacman/yay

alias p="sudo pacman"
alias i="sudo pacman -S"
alias r="sudo pacman -Rs"
alias in="pacman -Si"
alias s="pacman -Ssq"
alias src="sudo pacman -Ss"
alias ins="sudo pacman -S"
alias rem="sudo pacman -Rs"
alias upd="sudo pacman -Syu"

command -v compdef &>/dev/null &&
	compdef _ins ins



alias q="dragon"
alias e="atool -x"
alias grep="grep --color=auto"
alias g="grep -i"
alias ci="xclip -selection clipboard -t image/png"
alias ls="ls -h --group-directories-first --color=auto"
alias yt="youtube-dl --add-metadata --embed-thumbnail --embed-subs --ignore-errors -o '%(upload_date)s-%(title)s.%(ext)s'"
alias yta="youtube-dl --add-metadata --ignore-errors --extract-audio -f bestaudio/best --audio-format mp3"

recu() { echo -en "\e[4 q"; }

mc() { mkdir -p "$1"; cd "$1" || return; }
bk() { cp -r "$1" "$1_$(date +%Y-%m-%d_%H:%M:%S).bk"; }

alias td="transmission-daemon"
tc() { transmission-remote-cli; reset_cursor; }

v() {
	if [[ ! -e "$1" ]] || [[ "$(stat -c '%U' "$1")" = "$USER" ]]; then
		nvim "$@"
	else
		sudo -E nvim "$@"
	fi
	recu
}

vb() {
	local file
	file="$(find "$HOME/bin" -type f,l | fzf)" &&
		[[ -n "$file" ]] &&
		v "$file"
}

d() {
	case "$(file -ib "$1") $1" in
		*dir*)          cd "$1";;
		*video*|*gif*) mpv "$1" & disown;;
		*image*)        im "$1" & disown;;
		*audio*)    paplay "$1";;
		*gzip*)     tar -t "$1";;
		*html*)    firefox "$1";;
		*http*)
			curl -Ls "$1" -o "/tmp/${1##*/}"
			d     "/tmp/${1##*/}"
			rm -f "/tmp/${1##*/}";;
		# everything else
		*)             v "$1";;
	esac
}

hextorgb() { printf "%d %d %d\n" "0x${1:0:2}" "0x${1:2:2}" "0x${1:4:2}"; }
rgbtohex() { printf "%02X%02X%02X\n" "$@"; }

# shellcheck source=/dev/null
source "${XDG_CONFIG_HOME:-~/.config}/sh/sc.sh"





# tar

c() {
	tar -czvf "${1##*/}.tar.gz" "$@"
}

# ffmpeg

cgif() {
	local max_width="1000" i
	i="$(ffmpeg -i "$1" 2>&1 | grep -io "[1-9][0-9]*x" | sed 's/[a-z]//g')"
	[ "$i" -ge "$max_width" ] && i="$max_width"
	local f="fps=10,scale=$i:-1:flags=lanczos"
	ffmpeg -i "$1" -vf "$f,palettegen" -y "/tmp/palette.png" -loglevel error
	ffmpeg -i "$1" -i "/tmp/palette.png" -lavfi "$f [x]; [x][1:v] paletteuse" \
		-y "${1%.*}.gif" -loglevel error
}

c720() {
	ffmpeg -i "$1"          \
		-y                    \
	  -vf "scale=1280:720"  \
	  -b 3M                 \
	  -vcodec h264_nvenc    \
	  "${1%.*}-720.mp4"
}




# fun

blocks() {
	echo
	for i in {0..7}; do echo -n "\e[4${i}m  \e[0m ";	done
	echo
	for i in {0..7}; do echo -n "\e[10${i}m  \e[0m ";	done
	echo -e "\n"
}

notthing() {
	notify-send -u critical -t 99999999 '      urgent      ​'; \
	notify-send -t 99999999 '      normal      ​'; \
	notify-send -u low -t 99999999 'low'
}

inf() {
	echo
	printf "    %s\e[38;05;16m@\e[0m%s\n" "$USER" "$HOST"
	printf "\e[38;05;16m os:\e[0m  "
		printf "%8s\n" "$(source /etc/os-release; printf "%s\n" "$NAME")"
	printf "\e[38;05;16m pkgs:\e[0m"
		printf "%8s\n" "$(pacman -Qq | wc -l)"
	for i in {0..7}; do echo -n "\e[9${i}m▄\e[0m ";	done
	echo; echo
}

calc() {
	echo "scale=5; $*" | bc
}

# vim: ft=bash

#!/usr/bin/env bash

trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

fg="ccccee"
bg="1a1f2e"
ac="be405d"

volume() {
	muted="$(amixer -D pulse get Master | grep -i "\[off\]\|\[on\]" | awk '{print $6}' | sed -e '1!d' -e 's/\[//' -e 's/\]//')"

	if [[ $muted = off ]]; then
		vol="%{B#ffbe405d}%{O300}%{B-}"; return
	fi

	amix="$(amixer -D pulse get Master | grep -i "\[off\]\|\[on\]" | sed -e '1!d' -e 's/\[//g' -e 's/\]//g')"
	volume="$(echo ${amix}  | awk '{gsub("%", ""); print $5}')"
	notvol="$(( 100 - $volume ))"
	echo "vol=\"%{A4:vol up:}%{A5:vol down:}%{A:vol status vol:}%{B#ff$ac}%{O$volume}%{B#ff$fg}%{O$notvol}%{B-}%{O20}%{A}%{A}%{A}\"" > /tmp/volume
}

desktop() {
	local xda="$(bspc query -D --names | sort -n)"
	local active="$(bspc query -D -d focused --names)"
	for i in $(sed 's/\n/ /g' <<< $xda); do
		if [[ $i = $active ]]; then
			desktop+="%{B#ff$ac}%{O25}%{B-}%{O2}"
		else
			desktop+="%{B#ff$fg}%{O25}%{B-}%{O2}"
		fi
	done
	echo "desktop=\"%{A5:desktop.sh switch previous:}%{A4:desktop.sh switch next:}$desktop%{A}%{A}\"" > /tmp/desktop
}

case $1 in
	-d) desktop; exit;;
	-v) volume; exit;;
esac

pkill bar

monitor="$(xrandr -q | grep primary | awk '{print $4}' | sed -e 's/x/ /g' -e 's/+/ /g')"
monitorName="$(xrandr -q | grep primary | awk '{print $1}')"
width="$(awk '{print $1}' <<< $monitor )"
offX="$(awk '{print $3}' <<< $monitor)"
offY="$(awk '{print $4}' <<< $monitor)"

wifi="%{A:st -c floating -e nmtui-connect:}\uf1eb%{A}"

testtime() {
	DT=($(date "+%-I %-M"))
	# echo "time=\"%{A:nottime:}%{O20}$(testtime ${DT[0]}0)%{O18}$(testtime $((${DT[1]} * 2)))%{A}\"" > /tmp/time
	#val=$1
	val0="${DT[0]}0"
	val1="$((${DT[1]} * 2))"
	secs=4


	for i in {0..1}; do 
		out=""
		if [[ $i = 0 ]]; then
			val="$val0"
			secs=4
		elif [[ $i = 1 ]]; then
			val="$val1"
			secs=4
		fi
		while [[ $secs -gt 0 ]]; do
			if [[ $val -gt 30 ]]; then
				out+="%{B#ff$ac}%{O30}%{B-}%{O2}"
			elif [[ $val -le 0 ]]; then
				out+="%{B#ff$fg}%{O30}%{B-}%{O2}"
			else
				r=$((30 - $val))
				out+="%{B#ff$ac}%{O$val}%{B#ff$fg}%{O$r}%{B-}%{O2}"
			fi
			val=$(($val - 30))
			secs=$(($secs - 1))
		done
		echo -en "$out%{B-}%{O15}"
	done
	

}

thing() {

	if [[ $(bspc query -T -d | jq -r .layout) != monocle ]] || [[ $(bspc query -N -n .window -d focused | wc -l) = 1 ]]; then
		echo ""; return
	fi
	curname="$(bspc query -N -n)"
	for i in $(bspc query -N -n .window -d focused); do
		if [[ $curname = $i ]]; then
			echo -en "%{B#ff$ac}%{O25}%{B-}%{O2}"
		else
			echo -en "%{B#ff$fg}%{O25}%{B-}%{O2}"
		fi
	done
	echo "%{B-}"
}

(sleep 1; xdo above -t $(xdo id -n root) $(xdo id -n lemonbar)) &

while true; do 

	DT=($(date "+%-I %-M"))
	#echo "time=\"%{A:nottime:}%{O20}$(testtime ${DT[0]}0)%{O18}$(testtime $((${DT[1]} * 2)))%{A}\"" > /tmp/time
	echo "time=\"%{A:nottime:}%{O20}$(testtime)%{A}\"" > /tmp/time

	sleep 5
done &

bspc config -m HDMI-0 top_padding 3

desktop
volume

#testtime

while true; do 
	. /tmp/desktop 
	. /tmp/time 
	. /tmp/volume
	[[ -f /tmp/bat ]] && . /tmp/bat

	echo -e "$time%{c}$desktop%{r}$(thing)%{O40}$vol"

	sleep 0.06
done |
lemonbar -B "#00$bg" -F "#ff$fg" -f "Roboto Condensed:size=13" -f "Font Awesome:size=12" -g "${width}x3+$offX+$offY" -n "lemonbar" | bash

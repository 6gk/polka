#  ~/etc/sh/aliases

alias td="transmission-daemon"

# root
alias ss="sudo systemctl"

# package manager
# github.com/willeccles/cpm
alias \
	i="cpm i"  \
	r="cpm r"  \
	s="cpm s"  \
	in="cpm I" \
	up="cpm U"

# git
alias \
	ga="git add"  \
	gd="git diff"  \
	gp="git push"   \
	gs="git status"  \
	gc="git commit"   \
	gaa="git add -A"   \
	gpf="git push -f"   \
	gcm="git commit -m"  \
	gds="git diff --staged"  \
	gca="git commit --amend"
alias gl="git log --all --decorate --oneline --graph"

# standard utils
alias ls="ls -h --group-directories-first --color=auto"
alias grep="grep --color=auto"

alias \
	rm="del"   \
	g="grep -i" \
	s1="sleep 1" \
	s2="sleep 2" \
	s3="sleep 3" \
	s4="sleep 4" \
	fuck="pkill -9"

calc() { echo "scale=5; $*" | bc; }

# elapsed time
et() { ps -o command,etime $(pgrep "$1"); }

#
#  files/dirs
#

# file shortcuts
. "${XDG_CONFIG_HOME:-~/.config}/sh/sc.sh"

# drag and drop
alias q="dragon --and-exit"

# copy image
alias ci="xclip -selection clipboard -t image/png"

# rough find
f() { find "${2:-.}" -iname "*$1*"; }
# exact find
F() { find "${2:-.}" -name "$1"; }

# backup
# zstd decompresses fast
bk() { tar -I zstd -cvf "${1%/}.tar.zst" "$1"; }

alias e="atool -x"
c() { tar -czvf "${1##*/}.tar.gz" "$@"; }

# open videos/images
d() {
	case "$(file -ib "$1") $1" in
		*mp4|*mkv|*webm|video*|image/gif*) mpv "$@" &!;;
		*png|*jpeg|*jpg|image*) im "$@" &!;;
		*) echo "invalid format"; return 1;;
	esac
}

# quickly view contents of file based on term height
t() {
	[ -f "$1" ] || return
	var=$(wc -l "$1")
	if [ "${var%% *}" -ge $((LINES-4)) ]; then
		less "$1"
	else
		cat "$1"
	fi
}

# open file depending on if it's owned by root
: "${EDITOR:=nvim}"
v() {
	[[ "$1" =~ .*/.* ]] || local curdir="./"
	if [ ! "$1" ] || [ -w "$1" ] || [ -w "${1%/*}" ] || [ -w "$curdir" ]; then
		$EDITOR "$@"
	else
		sudo $EDITOR "$@"
	fi
	# reset cursor
	printf '\e[4 q'
}

#
#  ffmpeg
#

# convert to gif
cgif() {
	eval "$(ffprobe -v quiet -show_streams "$1" | grep '^[wh]')"

	[ "$width" -gt "1000" ] &&
		echo "video width ($width) greater than 1000, shrinking" &&
		width=1000

	f="fps=15,scale=$width:-1:flags=lanczos"

	echo "Generating the palette"
	ffmpeg -i "$1" -vf "$f,palettegen" -y "/tmp/palette.png" -loglevel error

	echo "Generating the gif"
	ffmpeg -i "$1" -i "/tmp/palette.png" -lavfi "$f [x]; [x][1:v] paletteuse" \
		-y "${1%.*}.gif" -loglevel error || return $!
}

# lower res to 720p
c720() {
	ffmpeg -y -i "$1" -b:v 4M \
		-c:v h264_nvenc    \
		-vf "scale=1280:-1" \
	  "${1%.*}-720.mp4"
}


#
#  colours
#

hextorgb() {
	printf "%d %d %d\n" \
		"0x${1:0:2}" \
		"0x${1:2:2}" \
		"0x${1:4:2}"
}

rgbtohex() {
	printf "%02X%02X%02X\n" "$@"
}

# display term colours
c07() {
	for i in 0 1 2 3 4 5 6 7; do
		printf '\033[%sm   ' "$1$i"
	done; echo
}

blocks() {
	echo
	c07 4
	c07 10
	echo
}

# random hex colour
rand() {
	printf "%02X%02X%02X\n" $(shuf -i 0-255 -n 3)
}

# preview hex colour
prev() {
	[ "$@" ] || { set -- $(cat /dev/stdin); }
	[ "$n" ] && [ "$n" -le 220 ] || n=30
	for i; do
		printf "\033]4;%s;#%s\007" "$n" "$i"
		printf "\033[38;05;%sm%s\033[0m   \033[48;05;%sm       \033[0m\n" \
			"$n" "$i" "$n"
		n=$((n+1))
	done
}

#
#  other
#

notthing() {
	notify-send -u critical -t 99999999 '      urgent      ​'; \
	notify-send -t 99999999 '      normal      ​'; \
	notify-send -u low -t 99999999 'low'
}

# window titles
#precmd() {
#	printf "\e[4 q\033k %s \033\\" "${PWD//$HOME/~}"
#}
#preexec() {
#	a="${3//$HOME/~}"
#	printf "\033k %s \033\\" "${a//\"}"
#}

# vim: ft=bash

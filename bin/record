#!/bin/bash
#
# Source:
#   https://gitlab.com/gaugek/dots/
#
# if $1 is unspecified, it asks if you want to manually specify the resolution and offset, or get them automatically from a display of your choice 
#
# Syntax: 
# $ record <Offset X> <Offset Y> <Width> <Height> <Frames Per Second>
# 

dir="$HOME/Videos/recordings"
name="$(date '+%Y-%m-%d.%H:%M:%S')" # Needs .mp4 after in the actual recording part

[[ -d $dir ]] || mkdir -p $dir

if [[ -z $1 ]]; then
    DoM="$(echo -e "Display\nManual\nSlop" | dmenu -i -p "Automatic dimensions from display, Manual dimensions, or select a region?")"
else
    DoM="Manual"
fi

if [[ ${DoM} = Display ]]; then
    displays="$(xrandr -q --current | grep -iv "   \|disconnect\|screen" | awk '{gsub("primary ", "");print $1 " " $3}')"
    display_select="$(echo -e "$displays" | awk '{print $1}' | dmenu -i -p "Display to record")"
    display_res="$(echo -e "$displays" | grep -i $display_select | awk '{gsub("x", " "); gsub("+", " ");  print $2 " " $3 " " $4 " " $5}' )"
    
    width="$(echo   $display_res | awk '{print $1}' )"
    height="$(echo  $display_res | awk '{print $2}' )"
    offsetX="$(echo $display_res | awk '{print $3}' )"
    offsetY="$(echo $display_res | awk '{print $4}' )"
    rate="$(echo -e "30\n60"     | dmenu -i -p "Framerate")"
    audio="$(echo -e "no\nyes"   | dmenu -i -p "Desktop audio?")"
elif [[ ${DoM} = Slop ]]; then
    #734x479+1440+357
    slop="$(slop)"
    slop1="$(echo $slop | awk '{ gsub("x", " "); gsub("+", " "); print}')"

    width="$(echo   $slop1 | awk '{print $1}' )"
    height="$(echo  $slop1 | awk '{print $2}' )"
    offsetX="$(echo $slop1 | awk '{print $3}' )"
    offsetY="$(echo $slop1 | awk '{print $4}' )"
    rate="$(echo -e "30\n60"     | dmenu -i -p "Framerate")"
    audio="$(echo -e "no\nyes"   | dmenu -i -p "Desktop audio?")"

elif [[ ${DoM} = Manual ]]; then
    [ -n "$1" ] && offsetX="$1" || offsetX="$(echo -e "1440\n0" | dmenu -i -p "Offset for the X axis")"
    [ -n "$2" ] && offsetY="$2" || offsetY="$(echo -e "0" | dmenu -i -p "Offset for the Y axis")"
    [ -n "$3" ] && width="$3"   || width="$(echo -e "1920\n1366\n1440" | dmenu -i -p "Width")"
    [ -n "$4" ] && height="$4"  || height="$(echo -e "1080\n768\n900" | dmenu -i -p "Height")"
    [ -n "$5" ] && rate="$5"    || rate="$(echo -e "30\n60" | dmenu -i -p "Framerate")"
    [ -n "$6" ] && audio="$6"   || audio="$(echo -e "no\nyes" | dmenu -i -p "Desktop audio?")"
fi

if [[ $audio = yes ]]; then 
    audio="-f pulse -i `pacmd list-sources | grep -PB 1 "analog.*monitor>" | head -n 1 | sed 's/.* //g'`"
else
    audio=""
fi

RtR="$(echo -e "No\nYes" | dmenu -i -p "Are you ready to record?")"

if [[ -n $DoM ]] && [[ $RtR = Yes ]]; then 
    notify-send -t 2000 "recording started"

    if [[ -n $(lspci | grep -i nvidia) ]]; then
        ffmpeg -y $(printf " $audio") \
            -f x11grab -draw_mouse 1 \
            -s ${width}x${height} -r ${rate} -i :0.0+${offsetX},${offsetY} \
            -qscale 0 -vcodec h264_nvenc \
            "${dir}/${name}".mp4 
    else
        ffmpeg -y $(printf " $audio") \
            -f x11grab -draw_mouse 1 \
            -s ${width}x${height} -r ${rate} -i :0.0+${offsetX},${offsetY} \
            -qscale 0 \
            "${dir}/${name}".mp4 
    fi
fi

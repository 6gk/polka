#!/usr/bin/env bash
#
#        GaugeK's bar
#   gitlab.com/GaugeK/dots
#

#set -x

fg="4b4e53"
fd="70747c"
bg="eeeeee"
bl="E8E8E8"
blr="E3E3E3"
ac="c882ca"
fifo="/tmp/barfifo"
#trap 'pkill -P $$' SIGINT

tim() {
	if [[ $(cat /tmp/barblink) = ":" ]]; then
		echo " " > /tmp/barblink
		time="$(date "+%A %I %M")";
	else
		echo ":" > /tmp/barblink
		time="$(date "+%A %I:%M")";
	fi

	echo "t%{A:nottime:}$time%{A}" > $fifo
}

nam() {
	echo "n$(xdotool getwindowfocus getwindowname)" > $fifo
}

desktop() {
	#echo "d$(bspc query -D -d focused --names)" > $fifo
	out=""
	f="$(bspc query -D -d focused --names)"
	for i in $(bspc query -D --names | sort -n | head -5); do
		if [[ $i = $f ]]; then
			out+="%{F#ff$fg}%{F-}"
		else
			out+="%{F#ff$fd}%{F-}"
		fi
	done
	echo -e "d$out" > $fifo
}

volume() {
	amix="$(amixer -D pulse get Master | grep -i "\[off\]\|\[on\]")"
	muted="$(awk '{print $6}' <<< $amix | sed -e '1!d' -e 's/\[//' -e 's/\]//')"
	vol="$(sed -e '1!d' -e 's/\[//g' -e 's/\]//g'  <<< $amix | grep -oi '[0-9][0-9]*%')"

	local b="%{A4:vol -p up:}%{A5:vol -p down:}%{A3:vol -p m:}%{A:vol -p status vol:}"
	local a="%{A}%{A}%{A}%{A}"
	if [[ $muted = off ]]; then
		echo -e "v${b} Muted${a}" > $fifo; return
	fi

	echo -e "v${b} $vol${a}" > $fifo
}

bat() {
	cat /sys/class/power_supply/*/capacity &>/dev/null || return
	declare -i capacity status

	cap="$(cat /sys/class/power_supply/*/capacity 2>/dev/null)"
	capacity="$(($cap / 4))"
	status=$(cat /sys/class/power_supply/*/status 2>/dev/null)

	case "$capacity" in
		0) bat=;;
		1) bat=;;
		2) bat=;;
		3) bat=;;
		*) bat=;;
	esac

	[[ $status = Charging ]] && bat=

	echo "b%{A4:light -A 10:}%{A5:light -U 10:}%{A:notify-send \\\"\$(acpi)\\\":}${bat} $cap%%{A}%{A}%{A}" > $fifo
}


case $1 in
	-b) bat; exit;;
	-t) tim; exit;;
	-n) nam; exit;;
	-v) volume; exit;;
	-d) desktop; exit;;
esac

[[ -e $fifo ]] && rm $fifo
mkfifo $fifo

killall lemonbar
sleep 0.1

bspc subscribe desktop_focus | while read -r des; do
	bar -d
done &

monitor=( $(xrandr -q | grep primary | awk '{print $4}' | sed -e 's/x/ /g' -e 's/+/ /g') )
monitorName="$(xrandr -q | grep primary | awk '{print $1}')"
width="300"
offX="$(( ${monitor[0]} + ${monitor[2]} - $width - 30 ))"
offY="$((${monitor[3]} + 30))"

(sleep 0.4;
bat;
volume;
desktop;
) &

(sleep 1; xdo above -t $(xdo id -n root) $(xdo id -n lemonbar)) &

while read -r line < "$fifo"; do
	case $line in
		v*) vol="${line#?}";;
		b*) bat="${line#?}";;
		a*) asda="${line#?}";;
		t*) time="${line#?}";;
		n*) name="${line#?}";;
		d*) desk="${line#?}";;
	esac
	echo -e "%{O15}$desk%{O15}$bat%{B-}%{r}$time%{O15}"
	sleep 0.01
done | (lemonbar \
	-d \
	-a 25 \
	-U "#ff$fd" \
	-u 8 \
	-B "#ff$bg" \
	-F "#ff$fg" \
	-f "kiwi:size=10" \
	-f "t mango Wide:size=10" \
	-g "${width}x40+$offX+$offY"; kill -- -0)| bash &

(sleep 0.4; bspc config -m "$monitorName" top_padding 0) &

#while true; do
#	bar -n;
#	sleep 0.1
#done

while true; do
	bar -b;
	bar -t;
	sleep 1
done > $fifo &

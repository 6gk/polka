#!/bin/sh

xd() { xdotool search --classname "dropdown" $@; }

[ -f /tmp/tabbed-status ] || touch /tmp/tabbed-status
status="$(cat /tmp/tabbed-status)"

xd >/dev/null 2>&1 || {
	tabbed -r 2 -n "dropdown" st -w '' &
	status="1"
}

case "$1" in
	-s|show) status="0";;
	-h|hide) status="1";;
esac

if [ "$status" = 1 ]; then
	action="windowmap" &&
		echo "0" > /tmp/tabbed-status
else
	action="windowunmap" &&
		echo "1" > /tmp/tabbed-status
fi

curdes="$(xdotool get_desktop)"
tabdes="$(xd get_desktop_for_window)"

if [ "$curdes" != "$tabdes" ]; then
	xd set_desktop_for_window "$curdes"
	action="windowmap"
	echo "0" > /tmp/tabbed-status
fi

eval "$(xdotool getwindowfocus getwindowgeometry --shell)"

# check which display has the window
# (I can't use pfd because that outputs my left monitor when
#  a window is maximized on my right monitor)
for i in $(lsd); do
	set -- $(dattr whxy "$i")

	[ "$X" -ge "$3" ] &&
		[ "$Y" -ge "$4" ] &&
		[ "$X" -lt $(( $1 + $3 )) ] &&
		[ "$Y" -lt $(( $2 + $4 )) ] &&
		break
done

[ "$WIDTH" = 3360 ] &&
	set -- $(dattr whxy $(ppd))

eval "$(xd getwindowgeometry --shell)"

nx="$(($3 + $1 - $(($1 / 2)) - $((WIDTH / 2))))"
ny="$(($4 + $2 - $(($2 / 2)) - $((HEIGHT / 2 ))))"

xd $action
xd windowmove "$nx" "$ny"

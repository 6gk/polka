#!/bin/sh
#
# amixer/playerctl wrapper script for volume/media
#
# source:
#   https://github.com/GaugeK
#
# shellcheck disable=SC2015
# shellcheck disable=SC2086

# use gdbus to replace notifications
# notify <id of notif> <header> <body>
# body is optional
notify() {
	gdbus call -e -d "org.freedesktop.Notifications" \
		-o /org/freedesktop/Notifications \
		-m org.freedesktop.Notifications.Notify "" \
		"$1" "" "$2" "$3" "[]" "{}" 5000 |:
}

playerctl() {
	command playerctl "$@" &
	{
		pid=$!
		sleep 1; kill $pid
	} |: &
}

mute() {
	# if a command isn't specified toggle mute
	if [ -z "$1" ]; then
		amixer -D pulse get Master | grep -qio "off" &&
			action="unmute" || action="mute"
	else
		action="$1"
	fi

	amixer -D pulse set Master "$action" |:
	notif="vol ${action}d"
}

mute_window() {
	# sorry this is so messy lol
	pulsemixer --id "$(pulsemixer --list-sinks \
		| grep -i "$(ps -p "$(xdotool getactivewindow getwindowpid)" -o comm=)" \
		| grep -io 'sink-input-[0-9]*' | tail -1)" --toggle-mute
}

volume() {
	# get the current volume
	amixer=$(amixer -D pulse get Master)
	current=${amixer##*[0-9] \[}
	current=${current%%%*}
	mute=${amixer##*\[}
	[ "$1" = get ] && [ "$mute" != 'on]' ] && printf '%s\n' "$current [muted]" && exit
	[ "$1" = get ] && printf '%s\n' "$current" && exit

	# default modifier (5%)
	[ "$2" ] && number="$2" || number="5"

	# calculate the new volume
	[ "$1" =  up  ] && number="$((current + number))"
	[ "$1" = down ] && number="$((current - number))"

	# handling of invalid numbers
	[ "$number" -lt  '0'  ] && number="0"
	[ "$number" -gt '100' ] && number="100"

	amixer -D pulse set Master "$number%" |:

	notif="vol set to $number"
}

media() {
	# force playerctl to use <x> player
	# format:
	# player="<x>"
	[ -f /tmp/player ] || touch /tmp/player
	. /tmp/player

	action="$1"

	# toggle play/pause
	[ "$1" = p ] && action="play-pause" && act="toggled pause on"

	playerctl -p "$player" "$action"
	notif="$act $(playerctl -p "$player" metadata xesam:title)"
}

case $1 in
	# mute
	m) mute;;
	mute|unmute) mute $1;;

	# mute current window
	mw) mute_window;;

	# volume
	get)
		volume get
	;;
	set)
		[ "$2" ] || { echo "option set requires a number"; exit 1; }
		volume set "$2"
	;;
	up|down) volume $1 $2;;

	# media
	p|pause|play|stop) media $1;;

	*)
		cat << EOF
muting
 mw      toggle mute on window
 m       toggle mute
 mute
 unmute

volume
 get     get current volume
 set     set volume to <number>
 up      increase volume by number (default: 5)
 down    decrease volume by number (default: 5)

media
 p       toggle pause
 pause
 play
 stop
EOF
		exit 1
esac

#notify 70 "$notif"
notvol "$notif"
